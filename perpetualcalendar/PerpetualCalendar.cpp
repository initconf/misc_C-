//
//  PerpetualCalendar.cpp
//  c++
//
//  Created by Aashish Sharma on 7/7/15.
//  Copyright (c) 2015 Aashish Sharma. All rights reserved.
//

#include "PerpetualCalendar.h"


bool PerpetualCalendar::is_leap(int i)
{
    
    if (i % 400 == 0)
        return true ;
    else if ( i % 100 == 0 )
        return false ;
    else if ( i % 4 == 0 )
        return true ;
    else
        return false ;
}

int PerpetualCalendar::strcmp(char *s1, char *s2)
{
    while (*s1 != '\0' || *s2 != '\0')
    {
        if ( *s1 != *s2){
            
            //cout << "incrementing pointers" << *s1 << " " << *s2 << endl ;
            //cout << "NO Match in strcmp" << endl ;
                return 0 ;
        }
        else {
              //cout << "incrementing pointers" << *s1 << " " << *s2 << endl ;
            s1++;
            s2++;
        }
    }
    
    //cout << "Found Match in strcmp" << *s1 << *s2 << endl ;
    
    return 1 ;
}

void PerpetualCalendar::copy( char* s,  const char* t)
{
    
    for (int i = 0 ; i < 100; i++)
    {
        s[i] = '\0' ;
    }
    
    do
    {
        *s = *t;
        s++;
        t++;
    } while (*t != '\0');
}


int PerpetualCalendar::validate_year (int year)
{
    if ((year >= 1755 ) && ( year <=2033))
        return 1;
    else
        return 0 ;
}


bool PerpetualCalendar::validate_day (int dd)
{
    
    if ( dd >=1 && dd <= 31)
        return true ;
    else
        return false ;
    
}



int PerpetualCalendar::validate_month(char mm[])
{
      char*  months[] = {   "Jan", "Feb", "Mar", "Apr", "May", "Jun",
                            "Jul" , "Aug", "Sep", "Oct", "Nov", "Dec"
                        };
    
    for ( int i = 0 ; i < 12; i++)
    {
      //  cout << " COunter is " << i << endl ;
        
        if (strcmp(mm, months[i]))
        {
            //cout << endl << "mm is : "<< mm << endl ; ;
           // cout << "Months [" << i <<  "] is : " << months[i] << endl ;
            return i+1;
        }
    }
    
    return 0 ;
}


int PerpetualCalendar::get_month_mapping(int var, int month )
{
    
    month--;
    
     const int month_map [14][12] = {
        {1,4,4,7,2,5,7,3,6,1,4,6},
        {2,5,5,1,3,6,1,4,7,2,5,7},
        {3,6,6,2,4,7,2,5,1,3,6,1},
        {4,7,7,3,5,1,3,6,2,4,7,2},
        {5,1,1,4,6,2,4,7,3,5,1,3},
        {6,2,2,5,7,3,5,1,4,6,2,4},
        {7,3,3,6,1,4,6,2,5,7,3,5},
        {1,4,5,1,3,6,1,4,7,2,5,7},
        {2,5,6,2,4,7,2,5,1,3,6,1},
        {3,6,7,3,5,1,3,6,2,4,7,2},
        {4,7,1,4,6,2,4,7,3,5,1,3},
        {5,1,2,5,7,3,5,1,4,6,2,4},
        {6,2,3,6,1,4,6,2,5,7,3,5},
        {7,3,4,7,2,5,7,3,6,1,4,6}
    };
    
    return month_map[var][month] ;
    
}

int PerpetualCalendar::get_calendar_mapping(int day, int cal)
{
    
        return ( day  + (cal -1 ) ) % 7;
    
}


int PerpetualCalendar::get_year_map(int year)
{
    
    //cout << "Year entered is "<< year << endl ;
    
    int year_map [279][2] = {
        {1755,'C'},
        {1756,'K'},
        {1757,'F'},
        {1758,'G'},
        {1759,'A'},
        {1760,'I'},
        {1761,'D'},
        {1762,'E'},
        {1763,'F'},
        {1764,'N'},
        {1765,'B'},
        {1766,'C'},
        {1767,'D'},
        {1768,'L'},
        {1769,'G'},
        {1770,'A'},
        {1771,'B'},
        {1772,'J'},
        {1773,'E'},
        {1774,'F'},
        {1775,'G'},
        {1776,'H'},
        {1777,'C'},
        {1778,'D'},
        {1779,'E'},
        {1780,'M'},
        {1781,'A'},
        {1782,'B'},
        {1783,'C'},
        {1784,'K'},
        {1785,'F'},
        {1786,'G'},
        {1787,'A'},
        {1788,'I'},
        {1789,'D'},
        {1790,'E'},
        {1791,'F'},
        {1792,'N'},
        {1793,'B'},
        {1794,'C'},
        {1795,'D'},
        {1796,'K'},
        {1797,'G'},
        {1798,'A'},
        {1799,'B'},
        {1800,'C'},
        {1801,'D'},
        {1802,'E'},
        {1803,'F'},
        {1804,'N'},
        {1805,'B'},
        {1806,'C'},
        {1807,'D'},
        {1808,'L'},
        {1809,'G'},
        {1810,'A'},
        {1811,'B'},
        {1812,'J'},
        {1813,'E'},
        {1814,'F'},
        {1815,'G'},
        {1816,'H'},
        {1817,'C'},
        {1818,'D'},
        {1819,'E'},
        {1820,'M'},
        {1821,'A'},
        {1822,'B'},
        {1823,'C'},
        {1824,'K'},
        {1825,'F'},
        {1826,'G'},
        {1827,'A'},
        {1828,'I'},
        {1829,'D'},
        {1830,'E'},
        {1831,'F'},
        {1832,'N'},
        {1833,'B'},
        {1834,'C'},
        {1835,'D'},
        {1836,'L'},
        {1837,'G'},
        {1838,'A'},
        {1839,'B'},
        {1840,'J'},
        {1841,'E'},
        {1842,'F'},
        {1843,'G'},
        {1844,'H'},
        {1845,'C'},
        {1846,'D'},
        {1847,'E'},
        {1848,'M'},
        {1849,'A'},
        {1850,'B'},
        {1851,'C'},
        {1852,'K'},
        {1853,'F'},
        {1854,'G'},
        {1855,'A'},
        {1856,'I'},
        {1857,'D'},
        {1858,'E'},
        {1859,'F'},
        {1860,'N'},
        {1861,'B'},
        {1862,'C'},
        {1863,'D'},
        {1864,'L'},
        {1865,'G'},
        {1866,'A'},
        {1867,'B'},
        {1868,'J'},
        {1869,'E'},
        {1870,'F'},
        {1871,'G'},
        {1872,'H'},
        {1873,'C'},
        {1874,'D'},
        {1875,'E'},
        {1876,'M'},
        {1877,'A'},
        {1878,'B'},
        {1879,'C'},
        {1880,'K'},
        {1881,'F'},
        {1882,'G'},
        {1883,'A'},
        {1884,'I'},
        {1885,'D'},
        {1886,'E'},
        {1887,'F'},
        {1888,'N'},
        {1889,'B'},
        {1890,'C'},
        {1891,'D'},
        {1892,'L'},
        {1893,'G'},
        {1894,'A'},
        {1895,'B'},
        {1896,'J'},
        {1897,'E'},
        {1898,'F'},
        {1899,'G'},
        {1900,'A'},
        {1901,'B'},
        {1902,'C'},
        {1903,'D'},
        {1904,'L'},
        {1905,'G'},
        {1906,'A'},
        {1907,'B'},
        {1908,'J'},
        {1909,'E'},
        {1910,'F'},
        {1911,'G'},
        {1912,'H'},
        {1913,'C'},
        {1914,'D'},
        {1915,'E'},
        {1916,'M'},
        {1917,'A'},
        {1918,'B'},
        {1919,'C'},
        {1920,'K'},
        {1921,'F'},
        {1922,'G'},
        {1923,'A'},
        {1924,'I'},
        {1925,'D'},
        {1926,'E'},
        {1927,'F'},
        {1928,'N'},
        {1929,'B'},
        {1930,'C'},
        {1931,'D'},
        {1932,'L'},
        {1933,'G'},
        {1934,'A'},
        {1935,'B'},
        {1936,'J'},
        {1937,'E'},
        {1938,'F'},
        {1939,'G'},
        {1940,'H'},
        {1941,'C'},
        {1942,'D'},
        {1943,'E'},
        {1944,'M'},
        {1945,'A'},
        {1946,'B'},
        {1947,'C'},
        {1948,'K'},
        {1949,'F'},
        {1950,'G'},
        {1951,'A'},
        {1952,'I'},
        {1953,'D'},
        {1954,'E'},
        {1955,'F'},
        {1956,'N'},
        {1957,'B'},
        {1958,'C'},
        {1959,'D'},
        {1960,'L'},
        {1961,'G'},
        {1962,'A'},
        {1963,'B'},
        {1964,'J'},
        {1965,'E'},
        {1966,'F'},
        {1967,'G'},
        {1968,'H'},
        {1969,'C'},
        {1970,'D'},
        {1971,'E'},
        {1972,'M'},
        {1973,'A'},
        {1974,'B'},
        {1975,'C'},
        {1976,'K'},
        {1977,'F'},
        {1978,'G'},
        {1979,'A'},
        {1980,'I'},
        {1981,'D'},
        {1982,'E'},
        {1983,'F'},
        {1984,'N'},
        {1985,'B'},
        {1986,'C'},
        {1987,'D'},
        {1988,'L'},
        {1989,'G'},
        {1990,'A'},
        {1991,'B'},
        {1992,'J'},
        {1993,'E'},
        {1994,'F'},
        {1995,'G'},
        {1996,'H'},
        {1997,'C'},
        {1998,'D'},
        {1999,'E'},
        {2000,'M'},
        {2001,'A'},
        {2002,'B'},
        {2003,'C'},
        {2004,'K'},
        {2005,'F'},
        {2006,'G'},
        {2007,'A'},
        {2008,'I'},
        {2009,'D'},
        {2010,'E'},
        {2011,'F'},
        {2012,'N'},
        {2013,'B'},
        {2014,'C'},
        {2015,'D'},
        {2016,'L'},
        {2017,'G'},
        {2018,'A'},
        {2019,'B'},
        {2020,'J'},
        {2021,'E'},
        {2022,'F'},
        {2023,'G'},
        {2024,'H'},
        {2025,'C'},
        {2026,'D'},
        {2027,'E'},
        {2028,'M'},
        {2029,'A'},
        {2030,'B'},
        {2031,'C'},
        {2032,'K'},
        {2033,'F'},
    };

    //char var = year_map[year - 1755][1];
    
    //cout << endl << "====================================" << endl  << endl << endl ;
    
    
    //cout << year_map[0][0] << year_map[0][1] << endl ;
    
    //cout << "VARIABLE IS " << var << endl ;
    
    //cout << "Mapping for << year << is :" << year_map[year - 1755][1] - 65 << endl ;
    
    //cout << endl << "====================================" << endl  << endl << endl ;
    
    return year_map[year - 1755][1] - 'A' ;
    
}
